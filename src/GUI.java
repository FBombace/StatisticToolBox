/*
 * Copyright 2015 Fabio Bombace
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static java.lang.Math.abs;
import static java.lang.Math.pow;
import static java.lang.Math.sqrt;
import java.math.BigDecimal;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane_Container = new javax.swing.JScrollPane();
        jPnl_Container = new javax.swing.JPanel();
        jPnl1_centralTendency = new javax.swing.JPanel();
        jLbl1_avg = new javax.swing.JLabel();
        jLbl1_median = new javax.swing.JLabel();
        jLbl1_quantile = new javax.swing.JLabel();
        jTxtFld1_avg = new javax.swing.JTextField();
        jTxtFld1_median = new javax.swing.JTextField();
        jTxtFld1_quantileIn = new javax.swing.JTextField();
        jTxtFld1_quantileOut = new javax.swing.JTextField();
        jPnl1_formIndex = new javax.swing.JPanel();
        jLbl1_skewness = new javax.swing.JLabel();
        jLbl1_kurtosis = new javax.swing.JLabel();
        jTxtFld1_skewness = new javax.swing.JTextField();
        jTxtFld1_kurtosis = new javax.swing.JTextField();
        jTxtFld1_kurtosisOut = new javax.swing.JTextField();
        jPnl1_variabilityIndex = new javax.swing.JPanel();
        jLbl1_variance = new javax.swing.JLabel();
        jLbl1_devStd = new javax.swing.JLabel();
        jLbl1_absAvgDeviation = new javax.swing.JLabel();
        jLbl1_variationCoeff = new javax.swing.JLabel();
        jTxtFld1_variance = new javax.swing.JTextField();
        jTxtFld1_devStd = new javax.swing.JTextField();
        jTxtFld1_absAvgDeviation = new javax.swing.JTextField();
        jTxtFld1_variationCoeff = new javax.swing.JTextField();
        jPnl_seriesInput = new javax.swing.JPanel();
        jTxtFld1_series = new javax.swing.JTextField();
        jTxtFld2_series = new javax.swing.JTextField();
        jBtn_calculate = new javax.swing.JButton();
        jLbl1_series = new javax.swing.JLabel();
        jLbl2_series = new javax.swing.JLabel();
        jBtn_reset = new javax.swing.JButton();
        jPnl2_centralTendency = new javax.swing.JPanel();
        jLbl2_avg = new javax.swing.JLabel();
        jLbl2_median = new javax.swing.JLabel();
        jLbl2_quantile = new javax.swing.JLabel();
        jTxtFld2_avg = new javax.swing.JTextField();
        jTxtFld2_median = new javax.swing.JTextField();
        jTxtFld2_quantileIn = new javax.swing.JTextField();
        jTxtFld2_quantileOut = new javax.swing.JTextField();
        jPnl2_variabilityIndex = new javax.swing.JPanel();
        jLbl2_variance = new javax.swing.JLabel();
        jLbl2_devStd = new javax.swing.JLabel();
        jLbl2_absAvgDeviation = new javax.swing.JLabel();
        jLbl2_variationCoeff = new javax.swing.JLabel();
        jTxtFld2_variance = new javax.swing.JTextField();
        jTxtFld2_devStd = new javax.swing.JTextField();
        jTxtFld2_absAvgDeviation = new javax.swing.JTextField();
        jTxtFld2_variationCoeff = new javax.swing.JTextField();
        jPnl2_formIndex = new javax.swing.JPanel();
        jLbl2_skewness = new javax.swing.JLabel();
        jLbl2_kurtosis = new javax.swing.JLabel();
        jTxtFld2_skewness = new javax.swing.JTextField();
        jTxtFld2_kurtosis = new javax.swing.JTextField();
        jTxtFld2_kurtosisOut = new javax.swing.JTextField();
        jPnl_correlation = new javax.swing.JPanel();
        jLbl_covariance = new javax.swing.JLabel();
        jLbl_pearson = new javax.swing.JLabel();
        jLbl_linearRegr = new javax.swing.JLabel();
        jTxtFld_covariance = new javax.swing.JTextField();
        jTxtFld_pearson = new javax.swing.JTextField();
        jTxtFld_linearRegr = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPnl1_centralTendency.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Central tendency indices, series 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl1_avg.setText("Average");

        jLbl1_median.setText("Median");

        jLbl1_quantile.setText("Quantile");

        jTxtFld1_avg.setEditable(false);

        jTxtFld1_median.setEditable(false);
        jTxtFld1_median.setToolTipText("");

        jTxtFld1_quantileIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFld1_quantileInInActionPerformed(evt);
            }
        });

        jTxtFld1_quantileOut.setEditable(false);

        javax.swing.GroupLayout jPnl1_centralTendencyLayout = new javax.swing.GroupLayout(jPnl1_centralTendency);
        jPnl1_centralTendency.setLayout(jPnl1_centralTendencyLayout);
        jPnl1_centralTendencyLayout.setHorizontalGroup(
            jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl1_centralTendencyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl1_centralTendencyLayout.createSequentialGroup()
                        .addGroup(jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbl1_median)
                            .addComponent(jLbl1_avg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtFld1_avg)
                            .addComponent(jTxtFld1_median)))
                    .addGroup(jPnl1_centralTendencyLayout.createSequentialGroup()
                        .addComponent(jLbl1_quantile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_quantileIn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld1_quantileOut)))
                .addContainerGap())
        );
        jPnl1_centralTendencyLayout.setVerticalGroup(
            jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl1_centralTendencyLayout.createSequentialGroup()
                .addGroup(jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_avg)
                    .addComponent(jTxtFld1_avg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLbl1_median)
                    .addComponent(jTxtFld1_median, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl1_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_quantile)
                    .addComponent(jTxtFld1_quantileIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtFld1_quantileOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPnl1_formIndex.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Form indices, series 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl1_skewness.setText("Skewness");

        jLbl1_kurtosis.setText("Kurtosis");

        jTxtFld1_skewness.setEditable(false);

        jTxtFld1_kurtosis.setEditable(false);

        jTxtFld1_kurtosisOut.setEditable(false);

        javax.swing.GroupLayout jPnl1_formIndexLayout = new javax.swing.GroupLayout(jPnl1_formIndex);
        jPnl1_formIndex.setLayout(jPnl1_formIndexLayout);
        jPnl1_formIndexLayout.setHorizontalGroup(
            jPnl1_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl1_formIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl1_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl1_formIndexLayout.createSequentialGroup()
                        .addComponent(jLbl1_skewness)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_skewness))
                    .addGroup(jPnl1_formIndexLayout.createSequentialGroup()
                        .addComponent(jLbl1_kurtosis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_kurtosis, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld1_kurtosisOut, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPnl1_formIndexLayout.setVerticalGroup(
            jPnl1_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl1_formIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl1_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_skewness)
                    .addComponent(jTxtFld1_skewness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl1_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_kurtosis)
                    .addComponent(jTxtFld1_kurtosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtFld1_kurtosisOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPnl1_variabilityIndex.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Variability indices, series 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl1_variance.setText("Variance");

        jLbl1_devStd.setText("Standard deviation");

        jLbl1_absAvgDeviation.setText("Absolute average deviation");

        jLbl1_variationCoeff.setText("Variation coefficient");

        jTxtFld1_variance.setEditable(false);

        jTxtFld1_devStd.setEditable(false);

        jTxtFld1_absAvgDeviation.setEditable(false);

        jTxtFld1_variationCoeff.setEditable(false);

        javax.swing.GroupLayout jPnl1_variabilityIndexLayout = new javax.swing.GroupLayout(jPnl1_variabilityIndex);
        jPnl1_variabilityIndex.setLayout(jPnl1_variabilityIndexLayout);
        jPnl1_variabilityIndexLayout.setHorizontalGroup(
            jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl1_variabilityIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl1_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl1_variance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_variance))
                    .addGroup(jPnl1_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl1_variationCoeff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_variationCoeff))
                    .addGroup(jPnl1_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl1_devStd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_devStd))
                    .addGroup(jPnl1_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl1_absAvgDeviation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld1_absAvgDeviation)))
                .addContainerGap())
        );
        jPnl1_variabilityIndexLayout.setVerticalGroup(
            jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl1_variabilityIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_variance)
                    .addComponent(jTxtFld1_variance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_devStd)
                    .addComponent(jTxtFld1_devStd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_absAvgDeviation)
                    .addComponent(jTxtFld1_absAvgDeviation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl1_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLbl1_variationCoeff)
                    .addComponent(jTxtFld1_variationCoeff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPnl_seriesInput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Series input fields", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jBtn_calculate.setText("Go (calculate)!");
        jBtn_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_calculateActionPerformed(evt);
            }
        });

        jLbl1_series.setText("Series 1");

        jLbl2_series.setText("Series 2 (optional)");

        jBtn_reset.setText("Reset");
        jBtn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnl_seriesInputLayout = new javax.swing.GroupLayout(jPnl_seriesInput);
        jPnl_seriesInput.setLayout(jPnl_seriesInputLayout);
        jPnl_seriesInputLayout.setHorizontalGroup(
            jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_seriesInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl_seriesInputLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtn_calculate)
                        .addGap(243, 243, 243)
                        .addComponent(jBtn_reset))
                    .addGroup(jPnl_seriesInputLayout.createSequentialGroup()
                        .addGroup(jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbl1_series)
                            .addComponent(jTxtFld1_series, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPnl_seriesInputLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLbl2_series))
                            .addGroup(jPnl_seriesInputLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTxtFld2_series, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPnl_seriesInputLayout.setVerticalGroup(
            jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_seriesInputLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl1_series)
                    .addComponent(jLbl2_series))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtFld2_series, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtFld1_series, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnl_seriesInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_calculate)
                    .addComponent(jBtn_reset)))
        );

        jPnl2_centralTendency.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Central tendency indices, series 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl2_avg.setText("Average");

        jLbl2_median.setText("Median");

        jLbl2_quantile.setText("Quantile");

        jTxtFld2_avg.setEditable(false);

        jTxtFld2_median.setEditable(false);
        jTxtFld2_median.setToolTipText("");

        jTxtFld2_quantileOut.setEditable(false);
        jTxtFld2_quantileOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtFld2_quantileOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnl2_centralTendencyLayout = new javax.swing.GroupLayout(jPnl2_centralTendency);
        jPnl2_centralTendency.setLayout(jPnl2_centralTendencyLayout);
        jPnl2_centralTendencyLayout.setHorizontalGroup(
            jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl2_centralTendencyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl2_centralTendencyLayout.createSequentialGroup()
                        .addGroup(jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbl2_median)
                            .addComponent(jLbl2_avg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtFld2_avg)
                            .addComponent(jTxtFld2_median)))
                    .addGroup(jPnl2_centralTendencyLayout.createSequentialGroup()
                        .addComponent(jLbl2_quantile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_quantileIn, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld2_quantileOut, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPnl2_centralTendencyLayout.setVerticalGroup(
            jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl2_centralTendencyLayout.createSequentialGroup()
                .addGroup(jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_avg)
                    .addComponent(jTxtFld2_avg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLbl2_median)
                    .addComponent(jTxtFld2_median, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl2_centralTendencyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_quantile)
                    .addComponent(jTxtFld2_quantileIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtFld2_quantileOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPnl2_variabilityIndex.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Variability indices, series 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl2_variance.setText("Variance");

        jLbl2_devStd.setText("Standard deviation");

        jLbl2_absAvgDeviation.setText("Absolute average deviation");

        jLbl2_variationCoeff.setText("Variation coefficient");

        jTxtFld2_variance.setEditable(false);

        jTxtFld2_devStd.setEditable(false);

        jTxtFld2_absAvgDeviation.setEditable(false);

        jTxtFld2_variationCoeff.setEditable(false);

        javax.swing.GroupLayout jPnl2_variabilityIndexLayout = new javax.swing.GroupLayout(jPnl2_variabilityIndex);
        jPnl2_variabilityIndex.setLayout(jPnl2_variabilityIndexLayout);
        jPnl2_variabilityIndexLayout.setHorizontalGroup(
            jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl2_variabilityIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl2_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl2_variance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_variance))
                    .addGroup(jPnl2_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl2_variationCoeff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_variationCoeff))
                    .addGroup(jPnl2_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl2_devStd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_devStd))
                    .addGroup(jPnl2_variabilityIndexLayout.createSequentialGroup()
                        .addComponent(jLbl2_absAvgDeviation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_absAvgDeviation)))
                .addContainerGap())
        );
        jPnl2_variabilityIndexLayout.setVerticalGroup(
            jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl2_variabilityIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_variance)
                    .addComponent(jTxtFld2_variance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_devStd)
                    .addComponent(jTxtFld2_devStd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_absAvgDeviation)
                    .addComponent(jTxtFld2_absAvgDeviation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl2_variabilityIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLbl2_variationCoeff)
                    .addComponent(jTxtFld2_variationCoeff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPnl2_formIndex.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Form indices, series 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl2_skewness.setText("Skewness");

        jLbl2_kurtosis.setText("Kurtosis");

        jTxtFld2_skewness.setEditable(false);

        jTxtFld2_kurtosis.setEditable(false);

        jTxtFld2_kurtosisOut.setEditable(false);

        javax.swing.GroupLayout jPnl2_formIndexLayout = new javax.swing.GroupLayout(jPnl2_formIndex);
        jPnl2_formIndex.setLayout(jPnl2_formIndexLayout);
        jPnl2_formIndexLayout.setHorizontalGroup(
            jPnl2_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl2_formIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl2_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl2_formIndexLayout.createSequentialGroup()
                        .addComponent(jLbl2_skewness)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_skewness))
                    .addGroup(jPnl2_formIndexLayout.createSequentialGroup()
                        .addComponent(jLbl2_kurtosis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtFld2_kurtosis, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld2_kurtosisOut)))
                .addContainerGap())
        );
        jPnl2_formIndexLayout.setVerticalGroup(
            jPnl2_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl2_formIndexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl2_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_skewness)
                    .addComponent(jTxtFld2_skewness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl2_formIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl2_kurtosis)
                    .addComponent(jTxtFld2_kurtosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtFld2_kurtosisOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPnl_correlation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data series correlation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLbl_covariance.setText("Covariance");

        jLbl_pearson.setText("Pearson product-moment correlation coefficient");

        jLbl_linearRegr.setText("Linear regression coefficient");

        jTxtFld_covariance.setEditable(false);

        jTxtFld_pearson.setEditable(false);

        jTxtFld_linearRegr.setEditable(false);

        javax.swing.GroupLayout jPnl_correlationLayout = new javax.swing.GroupLayout(jPnl_correlation);
        jPnl_correlation.setLayout(jPnl_correlationLayout);
        jPnl_correlationLayout.setHorizontalGroup(
            jPnl_correlationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_correlationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl_correlationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl_correlationLayout.createSequentialGroup()
                        .addComponent(jLbl_covariance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld_covariance))
                    .addGroup(jPnl_correlationLayout.createSequentialGroup()
                        .addComponent(jLbl_linearRegr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld_linearRegr))
                    .addGroup(jPnl_correlationLayout.createSequentialGroup()
                        .addComponent(jLbl_pearson)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtFld_pearson)))
                .addContainerGap())
        );
        jPnl_correlationLayout.setVerticalGroup(
            jPnl_correlationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_correlationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl_correlationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl_covariance)
                    .addComponent(jTxtFld_covariance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl_correlationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl_pearson)
                    .addComponent(jTxtFld_pearson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPnl_correlationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl_linearRegr)
                    .addComponent(jTxtFld_linearRegr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPnl_ContainerLayout = new javax.swing.GroupLayout(jPnl_Container);
        jPnl_Container.setLayout(jPnl_ContainerLayout);
        jPnl_ContainerLayout.setHorizontalGroup(
            jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_ContainerLayout.createSequentialGroup()
                .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPnl_correlation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPnl_ContainerLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPnl_seriesInput, javax.swing.GroupLayout.PREFERRED_SIZE, 741, Short.MAX_VALUE)
                            .addGroup(jPnl_ContainerLayout.createSequentialGroup()
                                .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPnl1_variabilityIndex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPnl1_centralTendency, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPnl1_formIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPnl2_variabilityIndex, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPnl2_centralTendency, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPnl2_formIndex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPnl_ContainerLayout.setVerticalGroup(
            jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_ContainerLayout.createSequentialGroup()
                .addComponent(jPnl_seriesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPnl1_centralTendency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPnl2_centralTendency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPnl2_variabilityIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPnl1_variabilityIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnl_ContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPnl1_formIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPnl2_formIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPnl_correlation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane_Container.setViewportView(jPnl_Container);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_Container, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jTxtFld2_quantileOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFld2_quantileOutActionPerformed
            // TODO add your handling code here:
	}//GEN-LAST:event_jTxtFld2_quantileOutActionPerformed

	private void jTxtFld1_quantileInInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtFld1_quantileInInActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jTxtFld1_quantileInInActionPerformed

    private void jBtn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_resetActionPerformed

        // series input
        jTxtFld1_series.setText("");
        jTxtFld2_series.setText("");

        // central tendency index
        jTxtFld1_avg.setText("");
        jTxtFld2_avg.setText("");
        jTxtFld1_median.setText("");
        jTxtFld2_median.setText("");
        jTxtFld1_quantileIn.setText("");
        jTxtFld2_quantileIn.setText("");
        jTxtFld1_quantileOut.setText("");
        jTxtFld2_quantileOut.setText("");

        // variability index
        jTxtFld1_variance.setText("");
        jTxtFld2_variance.setText("");
        jTxtFld1_devStd.setText("");
        jTxtFld2_devStd.setText("");
        jTxtFld1_absAvgDeviation.setText("");
        jTxtFld2_absAvgDeviation.setText("");
        jTxtFld1_variationCoeff.setText("");
        jTxtFld2_variationCoeff.setText("");

        // form index
        jTxtFld1_skewness.setText("");
        jTxtFld2_skewness.setText("");
        jTxtFld1_kurtosis.setText("");
        jTxtFld2_kurtosis.setText("");
        jTxtFld1_kurtosisOut.setText("");
        jTxtFld2_kurtosisOut.setText("");

        // pearson, covariance and linear regression
        jTxtFld_covariance.setText("");
        jTxtFld_pearson.setText("");
        jTxtFld_linearRegr.setText("");
    }//GEN-LAST:event_jBtn_resetActionPerformed

    private void jBtn_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_calculateActionPerformed

        String data1;
        String data2;
        boolean series2inserted;
        StringTokenizer st1, st2;
        float parsedNum1[] = null, parsedNum2[] = null;
        int numels1 = 0, numels2 = 0;

        /*** Parse user input ***/
        try
        {
            // parse series 1
            jTxtFld1_series.selectAll();
            data1 = jTxtFld1_series.getSelectedText(); // get user input
            if(data1 == null) // check if there are values inserted
            {
                return;
            }
            st1 = new StringTokenizer(data1, " ,"); // parse numbers from input string
            numels1 = st1.countTokens();
            parsedNum1 = new float[numels1];
            for(int i = 0; i < numels1; i++)
            {
                String strValue = st1.nextToken();
                parsedNum1[i] = Float.parseFloat(strValue);
            }

            // parse series 2
            series2inserted = false;
            jTxtFld2_series.selectAll();
            data2 = jTxtFld2_series.getSelectedText();
            if(data2 != null) // check if the user has inserted series 2
            {
                series2inserted = true;

                st2 = new StringTokenizer(data2, " ,"); // parse numbers from input (2) string
                numels2 = st2.countTokens();
                parsedNum2 = new float[numels2];
                for(int i = 0; i < numels2; i++)
                {
                    String strValue = st2.nextToken();
                    parsedNum2[i] = Float.parseFloat(strValue);
                }
            }
        }
        catch(NumberFormatException e)
        {
            launchGUIErrMess("invalid input");
            return;
        }

        /*** Central tendency index ***/
        // series 1
        float avg1 = setAvg(parsedNum1, 1);
        setMedian(parsedNum1, 1);
        jTxtFld1_quantileIn.selectAll();
        String tmpValue = jTxtFld1_quantileIn.getSelectedText();
        if(tmpValue != null) setQuantile(parsedNum1, tmpValue, 1);

        // series 2
        float avg2 = 0;
        if(series2inserted)
        {
            avg2 = setAvg(parsedNum2, 2);
            setMedian(parsedNum2, 2);
            jTxtFld2_quantileIn.selectAll();
            tmpValue = jTxtFld2_quantileIn.getSelectedText();
            if(tmpValue != null) setQuantile(parsedNum2, tmpValue, 2);
        }

        /*** Variability index ***/
        // series 1
        float variance1 = setVariance(parsedNum1, avg1, 1);
        float stdDev1 = setStdDev(variance1, 1);
        setAbsVariance(parsedNum1, avg1, 1);
        setVariationCoeff(stdDev1, avg1, 1);

        // series 2
        float variance2 = 0, stdDev2 = 0;
        if(series2inserted)
        {
            variance2 = setVariance(parsedNum2, avg2, 2);
            stdDev2 = setStdDev(variance2, 2);
            setAbsVariance(parsedNum2, avg2, 2);
            setVariationCoeff(stdDev2, avg2, 2);
        }

        /*** form index ***/
        // series 1
        setSkiwness(parsedNum1, avg1, 1);
        setKurtosis(parsedNum1, avg1, 1);

        // series 2
        if(series2inserted)
        {
            setSkiwness(parsedNum2, avg2, 2);
            setKurtosis(parsedNum2, avg2, 2);
        }

        /*** Covariance, Pearson coeff. and linear regression  ***/
        float covariance;
        if(series2inserted && (numels1 == numels2))
        {
            covariance = setCovariance(parsedNum1, parsedNum2, avg1, avg2);
            setPearson(covariance, stdDev1, stdDev2);
            setRegress(covariance, variance1, avg1, avg2);
        }
    }//GEN-LAST:event_jBtn_calculateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            try {
                    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Nimbus".equals(info.getName())) {
                                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                    break;
                            }
                    }
            } catch (ClassNotFoundException ex) {
                    java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                    java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                    java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                            new GUI().setVisible(true);
                    }
            });
    }

    public void launchGUIErrMess(String mess)
    {
        JOptionPane.showMessageDialog(null, mess, "error",
            JOptionPane.ERROR_MESSAGE);
    }

   public void setMedian(float arrayIn[], int nseries)
   {
	float med;
	float arraySorted[] = insertionSort(arrayIn); // sort the array value from min to max
	int numels = arraySorted.length;

	if(numels % 2 != 0)
	{
            med = arraySorted[(numels + 1) / 2 - 1];
        }
        else
        {
            med = (arraySorted[(numels / 2) - 1] + arraySorted[numels / 2]) / 2;
        }

        Float tmp = med;
        if(nseries == 1)
        {
            jTxtFld1_median.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_median.setText(tmp.toString());
        }
    }

   public float setAvg(float parsedNum[], int nseries)
   {
        float avg = 0;
        int numels = parsedNum.length;

        for(int i = 0; i < numels; i++)
        {
            avg += parsedNum[i];
        }
        avg /= numels;

        Float tmp = avg;
        if(nseries == 1)
        {
            jTxtFld1_avg.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_avg.setText(tmp.toString());
        }
        return avg;
    }

   public void setQuantile(float arrayIn[], String strQtl, int nseries)
   {
       float qtl = Float.parseFloat(strQtl);
       float arraySorted[] = insertionSort(arrayIn);
       Float result = 0f;

       // check input validity
        if(qtl >= 0 && qtl <= 1)
        {
            if(qtl > 0 && qtl < 1)
            {
                float h = qtl * (arraySorted.length + 1);

                // checking if h has a decimale part and obtain it if any
                Float tmpFloat = h;
                String strDec = tmpFloat.toString().substring(2);

                boolean decimal = false;
                int n = strDec.length();
                for(int i = 0; i < n; i++)
                {
                    if(strDec.charAt(i) != '0')
                    {
                        decimal = true;
                    }
                }
                if(!decimal)
                {
                    result = arraySorted[(int)h - 1];
                }
                else // if enter here h has a decimal part
                {
                    result = arraySorted[(int)h - 1] + arraySorted[(int)h];
                    result /= 2;
                }
            }
            else if(qtl == 0) // returning the minimum value
            {
                float min = Float.MAX_VALUE;
                for(int i = 0; i < arraySorted.length; i++)
                {
                    if(arraySorted[i] < min) min = arraySorted[i];
                }
                result = min;
            }
            else if(qtl == 1) // returning the maximum value
            {
                float max = Float.MIN_VALUE;
                for(int i = 0; i < arraySorted.length; i++)
                {
                    if(arraySorted[i] > max) max = arraySorted[i];
                }
                result = max;
            }
            // write result on jTextField
            if(nseries == 1)
            {
                jTxtFld1_quantileOut.setText(result.toString());
            }
            else
            {
                jTxtFld2_quantileOut.setText(result.toString());
            }
        }
       else
        {
            launchGUIErrMess("invalid quantile input");
        }
    }

    public float setVariance(float parsedNum[], float avg, int nseries)
    {
        float result = 0;
        for(int i = 0; i < parsedNum.length; i++)
        {
            result += pow(parsedNum[i] - avg , 2);
        }
        result /= parsedNum.length;

        Float tmp = result;
        if(nseries == 1)
        {
            jTxtFld1_variance.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_variance.setText(tmp.toString());
        }
        return result;
    }

    public float setStdDev(float var, int nseries)
    {
        // using the variance value calculated before
        BigDecimal tmp = new BigDecimal(var);
        tmp = BigDecimal.valueOf(Math.sqrt(tmp.doubleValue()));

        if(nseries == 1)
        {
            jTxtFld1_devStd.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_devStd.setText(tmp.toString());
        }
        return tmp.floatValue();
    }

    public void setAbsVariance(float parsedNum[], float avg, int nseries)
    {
        float result = 0;
        for(int i = 0; i < parsedNum.length; i++)
        {
            result += abs(parsedNum[i] - avg);
        }
        result /= parsedNum.length;

        Float tmp = result;
        if(nseries == 1)
        {
            jTxtFld1_absAvgDeviation.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_absAvgDeviation.setText(tmp.toString());
        }
    }

    public void setVariationCoeff(float stdDev, float avg, int nseries)
    {
        float result = stdDev / avg;
        Float tmp = result;

        if(nseries == 1)
        {
            jTxtFld1_variationCoeff.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_variationCoeff.setText(tmp.toString());
        }
    }

    public void setSkiwness(float parsedNum[], float avg, int nseries)
    {
        float numer = 0;
        for(int i = 0; i < parsedNum.length; i++)
        {
            numer += pow(parsedNum[i] - avg , 3);
        }
        numer /= parsedNum.length;

        double denom = 0;
        for(int i = 0; i < parsedNum.length; i++)
        {
            denom += pow(parsedNum[i] - avg , 2);
        }
        denom /= parsedNum.length;
        denom = sqrt(pow(denom, 3));

        float result = numer / (float)denom;
        Float tmp = result;
        if(nseries == 1)
        {
            jTxtFld1_skewness.setText(tmp.toString());
        }
        else
        {
            jTxtFld2_skewness.setText(tmp.toString());
        }
    }

    public void setKurtosis(float parsedNum[], float avg, int nseries)
    {
        float numer = 0;
        for(int i = 0; i < parsedNum.length; i++)
        {
            numer += pow(parsedNum[i] - avg , 4);
        }
        numer /= parsedNum.length;

        double denom = 0;
        for(int i = 0; i < parsedNum.length; i++)
        {
            denom += pow(parsedNum[i] - avg , 2);
        }
        denom /= parsedNum.length;
        denom = pow(denom, 2);

        float result = numer / (float)denom;
        Float tmp = result;
        javax.swing.JTextField KurtJTxtFld;
        javax.swing.JTextField KurtoutJTxtFld;
        if(nseries == 1)
        {
            KurtJTxtFld = jTxtFld1_kurtosis;
            KurtoutJTxtFld = jTxtFld1_kurtosisOut;
        }
        else
        {
            KurtJTxtFld = jTxtFld2_kurtosis;
            KurtoutJTxtFld = jTxtFld2_kurtosisOut;
        }
        KurtJTxtFld.setText(tmp.toString());
        if(result > 3) KurtoutJTxtFld.setText("Leptokurtic distrib.");
        else if(result < 3) KurtoutJTxtFld.setText("Platykurtic distrib.");
        else KurtoutJTxtFld.setText("Normal distrib. height");
    }

    public float setCovariance(float data1[], float data2[], float avg1, float avg2)
    {
        float result = 0;
        for(int i = 0; i < data1.length; i++)
        {
            result += (data1[i] - avg1) * (data2[i] - avg2);
        }
        result /= data1.length;
        Float tmp = result;
        jTxtFld_covariance.setText(tmp.toString());

        return result;
    }

    public void setPearson(float covar, float stdDev1, float stdDev2)
    {
        Float result = covar / (stdDev1 * stdDev2);
        jTxtFld_pearson.setText(result.toString());
    }

    public void setRegress(float covar, float var, float avgX, float avgY)
    {
        float m = covar / var;
        float q = avgY - (m * avgX);

        String tmp = "(m = " + m + ", q = " + q + ")";
        jTxtFld_linearRegr.setText(tmp);
    }

    public float[] insertionSort(float parsedNum[])
    {
        /*
        for i ← 1 to length[A] do
            value ← A[i]
            j ← i-1
            while j >= 0 and A[j] > value do
                A[j + 1] ← A[j]
                j ← j-1
            A[j+1] ← value
        */

        float value;
        int j;
        int numels = parsedNum.length;
        float outArray[] = new float[numels];
        for(int i = 0; i < numels; i++)
        {
            outArray[i] = parsedNum[i];
        }

        for(int i = 0; i < numels; i++)
        {
            value = outArray[i];
            j = i - 1;
            while((j >= 0) && (outArray[j] > value))
            {
                outArray[j + 1] = outArray[j];
                j = j - 1;
            }
            outArray[j + 1] = value;
        }
        return outArray;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_calculate;
    private javax.swing.JButton jBtn_reset;
    private javax.swing.JLabel jLbl1_absAvgDeviation;
    private javax.swing.JLabel jLbl1_avg;
    private javax.swing.JLabel jLbl1_devStd;
    private javax.swing.JLabel jLbl1_kurtosis;
    private javax.swing.JLabel jLbl1_median;
    private javax.swing.JLabel jLbl1_quantile;
    private javax.swing.JLabel jLbl1_series;
    private javax.swing.JLabel jLbl1_skewness;
    private javax.swing.JLabel jLbl1_variance;
    private javax.swing.JLabel jLbl1_variationCoeff;
    private javax.swing.JLabel jLbl2_absAvgDeviation;
    private javax.swing.JLabel jLbl2_avg;
    private javax.swing.JLabel jLbl2_devStd;
    private javax.swing.JLabel jLbl2_kurtosis;
    private javax.swing.JLabel jLbl2_median;
    private javax.swing.JLabel jLbl2_quantile;
    private javax.swing.JLabel jLbl2_series;
    private javax.swing.JLabel jLbl2_skewness;
    private javax.swing.JLabel jLbl2_variance;
    private javax.swing.JLabel jLbl2_variationCoeff;
    private javax.swing.JLabel jLbl_covariance;
    private javax.swing.JLabel jLbl_linearRegr;
    private javax.swing.JLabel jLbl_pearson;
    private javax.swing.JPanel jPnl1_centralTendency;
    private javax.swing.JPanel jPnl1_formIndex;
    private javax.swing.JPanel jPnl1_variabilityIndex;
    private javax.swing.JPanel jPnl2_centralTendency;
    private javax.swing.JPanel jPnl2_formIndex;
    private javax.swing.JPanel jPnl2_variabilityIndex;
    private javax.swing.JPanel jPnl_Container;
    private javax.swing.JPanel jPnl_correlation;
    private javax.swing.JPanel jPnl_seriesInput;
    private javax.swing.JScrollPane jScrollPane_Container;
    private javax.swing.JTextField jTxtFld1_absAvgDeviation;
    private javax.swing.JTextField jTxtFld1_avg;
    private javax.swing.JTextField jTxtFld1_devStd;
    private javax.swing.JTextField jTxtFld1_kurtosis;
    private javax.swing.JTextField jTxtFld1_kurtosisOut;
    private javax.swing.JTextField jTxtFld1_median;
    private javax.swing.JTextField jTxtFld1_quantileIn;
    private javax.swing.JTextField jTxtFld1_quantileOut;
    private javax.swing.JTextField jTxtFld1_series;
    private javax.swing.JTextField jTxtFld1_skewness;
    private javax.swing.JTextField jTxtFld1_variance;
    private javax.swing.JTextField jTxtFld1_variationCoeff;
    private javax.swing.JTextField jTxtFld2_absAvgDeviation;
    private javax.swing.JTextField jTxtFld2_avg;
    private javax.swing.JTextField jTxtFld2_devStd;
    private javax.swing.JTextField jTxtFld2_kurtosis;
    private javax.swing.JTextField jTxtFld2_kurtosisOut;
    private javax.swing.JTextField jTxtFld2_median;
    private javax.swing.JTextField jTxtFld2_quantileIn;
    private javax.swing.JTextField jTxtFld2_quantileOut;
    private javax.swing.JTextField jTxtFld2_series;
    private javax.swing.JTextField jTxtFld2_skewness;
    private javax.swing.JTextField jTxtFld2_variance;
    private javax.swing.JTextField jTxtFld2_variationCoeff;
    private javax.swing.JTextField jTxtFld_covariance;
    private javax.swing.JTextField jTxtFld_linearRegr;
    private javax.swing.JTextField jTxtFld_pearson;
    // End of variables declaration//GEN-END:variables
}
